 /*-----------------------------------------------------------------------------------------------------------------------------------*/
 /* 0.Documentation section
  -----------------------------------------------------------------------------------------------------------------------------------

  @file-uart.h

 @brief:This file includes various uart specific operations which are triggered by interrupts

 @author: Vikrant Waje and Kiran Hegde

 @date:26 October 2017


 */
/*--------------------------------------------------------------------------------------------------------------------------------*/

/*Guard section*/

#ifndef INCLUDES_UART_H_
#define INCLUDES_UART_H_
/*----------------------------------------------------------------------------------------------------------------------------------*/
/*-------------------------------------------------------------------------------------------------------------------------------------------------------*/

#define baud 57600//Set baud rate to 115200
/*-------------------------------------------------------------------------------------------------*/


/*Function declaration*/
/*
  @brief: To configure UART

  Configure the UART by setting its appropriate register

 @param: None


 @return: None
 */
/*-----------------------------------------------------------------------------------------------------------------------------*/
void UART_configure();


/*--------------------------------------------------------------------------------------------------------------------------*/
/*
  @brief: Send a single character from UART_D register to circular buffer

  This basically allows the value entered on putty/teraterm to get added into circular buffer

 @param: pointer to data that is to be sent


 @return: status whether transmit interrupt is activated
 */
void UART_send(uint8_t byte);

/*---------------------------------------------------------------------------------------------------------------------------*/
/*
  @brief: Integer to ascii conversion

  Given a integer , convert it into its respective ascii value

 @param: Integer number to be converted, pointer to store the result, base to which the integer is to be converted


 @return: Pointer to result
 */
/*-----------------------------------------------------------------------------------------------------------------------------*/
uint8_t *my_itoa(int8_t num,uint8_t *str, uint8_t base);
/*---------------------------------------------------------------------------------------------------------------------------------------------*/
/*
  @brief: UART IRQ handler

  Contains transmit and receive interrupt which gets triggered when UART_D register is full or empty

 @param: None


 @return: None
 */
/*-----------------------------------------------------------------------------------------------------------------------------*/
void UART0_IRQHandler();







#endif /* INCLUDES_UART_H_ */
